{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/Layout/Notification.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/toggleCart-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/Layout/Notification.js","App.js","store/cart-Action.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","removedItemId","filter","setInitialState","cartActions","actions","CartItem","dispatch","useDispatch","title","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","toggleCartSlice","isCartShown","notification","toggleCart","notificationHandler","toggleActions","CartButton","cartItemsQuantity","toggleCartHandler","button","badge","MainHeader","header","Layout","ProductItem","description","Products","products","product","Notification","specialClasses","status","error","success","cssClasses","message","initialLoad","App","notifyChecker","useEffect","a","fetch","response","json","cartData","sendRequest","method","body","JSON","stringify","ok","Error","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f1aaccb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1z4G2\",\"details\":\"CartItem_details__3vmfK\",\"quantity\":\"CartItem_quantity__3nkVu\",\"price\":\"CartItem_price__2tHLO\",\"itemprice\":\"CartItem_itemprice__2jfEG\",\"actions\":\"CartItem_actions__1M7OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid-design\":\"ProductItem_grid-design__1Cvi3\",\"item\":\"ProductItem_item__dzq7o\",\"price-container\":\"ProductItem_price-container__1EYAt\",\"price\":\"ProductItem_price__kH0yO\",\"actions\":\"ProductItem_actions__3hyBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2_7TN\",\"badge\":\"CartButton_badge__2-r-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1ARvK\",\"error\":\"Notification_error__1SWFV\",\"success\":\"Notification_success__3-Ax5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__br_Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3N8v4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1a2JY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1gzje\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false\r\n    },\r\n    reducers: {\r\n        addToCart(state, action) { \r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if (existingItem) {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n            }\r\n            else {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    name: newItem.name,\r\n                    price: newItem.price,\r\n                    totalPrice: newItem.price,\r\n                    quantity: 1\r\n                });\r\n            }\r\n        },\r\n        removeFromCart(state, action) {\r\n            const removedItemId = action.payload;\r\n            const existingItem = state.items.find(item => item.id === removedItemId);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== removedItemId);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n        setInitialState(state, action) {\r\n            state.items = action.payload.items;\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n        }\r\n    }\r\n\r\n})\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;","import classes from './CartItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n  const addHandler = () => {\n    dispatch(cartActions.addToCart({\n      id,\n      price,\n      name: title\n    }));\n  }\n\n  const removeHandler = () => {\n    dispatch(cartActions.removeFromCart(id));\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeHandler}>-</button>\n          <button onClick={addHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n  const cartItems = useSelector(state => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => \n          (\n            <CartItem\n              key={item.id}\n              item={{ id: item.id, title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price }}\n            />\n          ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst toggleCartSlice = createSlice({\r\n    name: 'toggelCart',\r\n    initialState: { isCartShown: false, notification: null },\r\n    reducers: {\r\n        toggleCart(state) {\r\n            state.isCartShown = !state.isCartShown;\r\n        },\r\n        notificationHandler(state,action) {\r\n            state.notification = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport const toggleActions = toggleCartSlice.actions;\r\n\r\nexport default toggleCartSlice;","import { Fragment } from 'react';\nimport classes from './CartButton.module.css';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { toggleActions } from '../../store/toggleCart-slice';\n\nconst CartButton = (props) => {\n  const cartItemsQuantity = useSelector(state => state.cart.totalQuantity);\n  const isCartShown = useSelector(state => state.toggleCart.isCartShown);\n  const dispatch = useDispatch();\n  const toggleCartHandler = () =>{\n    dispatch(toggleActions.toggleCart());\n  }\n  // console.log(cartItemsQuantity);\n  return (\n    <Fragment>\n      {!isCartShown && (\n        <button className={classes.button} onClick={toggleCartHandler}>\n          <span>Cart</span>\n          <span className={classes.badge}>{cartItemsQuantity}</span>\n        </button>\n      )}\n      {isCartShown && (\n        <button className={classes.button} onClick={toggleCartHandler}>\n          <span>Close Cart</span>\n        </button>\n      )}\n    </Fragment>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>BookStore</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addToCart({\n      id,\n      name: title,\n      price,\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card className={classes['grid-design']}>\n        <header>\n          <h3>{title}</h3>\n        <p>{description}</p>\n        </header>\n        <div className={classes['price-container']}>\n          <span className={classes.price}>${price.toFixed(2)}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst Products = (props) => {\n  const products = [\n    {\n      id: \"p1\",\n      price: 6,\n      title: \"React.js Book\",\n      description: \"Learn Basics To Advance of React.\",\n    },\n    {\n      id: \"p2\",\n      price: 5,\n      title: \"JavaScript Book\",\n      description: \"All you need to know about JavaScript\",\n    },\n    {\n      id: \"p3\",\n      price: 7,\n      title: \"HTML & CSS Book\",\n      description: \"Make Cool Website Designs.\",\n    },\n    {\n      id: \"p4\",\n      price: 10,\n      title: \"Node.js Book\",\n      description: \"JavaScript Outside The Browser\",\n    }\n  ];\n\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite books</h2>\n      <ul>\n        {products.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = \"\";\r\n\r\n  if (props.status === \"error\") {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useEffect,Fragment } from 'react'; \nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/Layout/Notification';\n// import { toggleActions } from './store/toggleCart-slice';\nimport { postData,getData } from './store/cart-Action';\nimport { useSelector,useDispatch } from 'react-redux'; \n\nlet initialLoad = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n\n  const isCartShown = useSelector(state => state.toggleCart.isCartShown);\n  const notifyChecker = useSelector(state => state.toggleCart.notification);\n  const cart = useSelector(state => state.cart);\n\n  useEffect(() => {\n    dispatch(getData())\n  },[dispatch])\n  useEffect(() => {\n      if (initialLoad) {\n          initialLoad = false;\n          return;\n      }\n      \n      if (cart.changed) {\n          dispatch(postData(cart));\n      }\n\n\n      //   dispatch(\n      //     toggleActions.notificationHandler({\n      //       status: \"pending\",\n      //       title: \"Sending...\",\n      //       message: \"Sending Data. Please wait for a while.\",\n      //     })\n      //   );\n\n      //   const response = await fetch(\n      //     \"https://react-redux-async-c2500-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n      //     {\n      //       method: \"PUT\",\n      //       body: JSON.stringify(cart),\n      //     }\n      //   );\n\n      //   if (!response.ok) {\n      //     throw new Error(\"error :(\");\n      //   }\n\n      //   dispatch(\n      //     toggleActions.notificationHandler({\n      //       status: \"success\",\n      //       title: \"Successful :)\",\n      //       message: \"Data Sent Successfully\",\n      //     })\n      //   );\n      // };\n\n      // dataSender().catch((error) => {\n      //   dispatch(\n      //     toggleActions.notificationHandler({\n      //       status: \"error\",\n      //       title: \"Failed :(\",\n      //       message: \"Sending Data Failed.\",\n      //     })\n      //   );\n      // });\n  },[cart,dispatch]);\n\n  return (\n    <Fragment>\n      {notifyChecker && (\n        <Notification\n          status={notifyChecker.status}\n          title={notifyChecker.title}\n          message={notifyChecker.message}\n        />\n      )}\n      <Layout>\n        {isCartShown && <Cart />}\n        {!isCartShown && <Products />}\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { toggleActions } from './toggleCart-slice';\r\nimport { cartActions } from './cart-slice';\r\n\r\nexport const postData = (cartData) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n          toggleActions.notificationHandler({\r\n            status: \"pending\",\r\n            title: \"Sending...\",\r\n            message: \"Sending Data. Please wait for a while.\",\r\n          })\r\n        );\r\n\r\n        const sendRequest = async() => {\r\n            const response = await fetch(\r\n          \"https://react-redux-async-c2500-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(cartData),\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"error :(\");\r\n        }\r\n        }\r\n        try {\r\n            await sendRequest();\r\n            dispatch(\r\n              toggleActions.notificationHandler({\r\n                status: \"success\",\r\n                title: \"Successful :)\",\r\n                message: \"Data Sent Successfully\",\r\n              })\r\n            );\r\n        } catch (error) {\r\n            dispatch(\r\n              toggleActions.notificationHandler({\r\n                status: \"error\",\r\n                title: \"Failed :(\",\r\n                message: \"Sending Data Failed.\",\r\n              })\r\n            );\r\n        }\r\n\r\n      };\r\n}\r\n\r\nexport const getData = () => {\r\n    return async(dispatch) => {\r\n        const response = await fetch(\r\n          \"https://react-redux-async-c2500-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\"\r\n        );\r\n        const cartData = await response.json();\r\n\r\n        if (cartData) {\r\n            dispatch(\r\n              cartActions.setInitialState({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity || 0,\r\n              })\r\n            );\r\n        }\r\n    } \r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport toggleCartSlice from './toggleCart-slice';\r\nimport cartSlice from './cart-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: { toggleCart: toggleCartSlice.reducer, cart: cartSlice.reducer }\r\n})\r\n\r\nexport default store;\r\n\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}